.build-tag-push: &build-tag-push
  image: docker:git
  stage: build
  only:
    - pushes
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add make bash
    - docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" 

  script:
   - docker pull $CI_REGISTRY_IMAGE/$DOCKER_IMAGE:latest || echo "No previous image build found for $DOCKER_IMAGE"
   - docker build -t "$CI_REGISTRY_IMAGE/$DOCKER_IMAGE:$DOCKER_TAG" -t "$CI_REGISTRY_IMAGE/$DOCKER_IMAGE:$CI_COMMIT_SHA" -t "$CI_REGISTRY_IMAGE/$DOCKER_IMAGE:$CI_COMMIT_REF_SLUG" --cache-from "$CI_REGISTRY_IMAGE/$DOCKER_IMAGE:latest" .
   - docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" 
   - docker push $CI_REGISTRY_IMAGE/$DOCKER_IMAGE:latest                     
   - docker push $CI_REGISTRY_IMAGE/$DOCKER_IMAGE:$DOCKER_TAG
   - docker push $CI_REGISTRY_IMAGE/$DOCKER_IMAGE:$CI_COMMIT_REF_SLUG
   - docker push $CI_REGISTRY_IMAGE/$DOCKER_IMAGE:$CI_COMMIT_SHA 
  
.base-variables: &base-variables
    DOCKER_TAG: latest
    DOCKER_DRIVER: overlay2
 
stages:
  - build-notebook


build-sdr4iot-notebook:
  <<: *build-tag-push
  stage: build-notebook
  variables:
    <<: *base-variables
    CI_REGISTRY_IMAGE: $CI_REGISTRY/sdr4iot/docker-gpulab-sdr4iot
    DOCKER_IMAGE: gpulab-tensorflow-sdr4iot
